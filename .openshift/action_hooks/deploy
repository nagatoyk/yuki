#!/bin/bash

# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

if [ ! -d ${OPENSHIFT_DATA_DIR}files ]; then
	mkdir ${OPENSHIFT_DATA_DIR}files
fi

if [ ! -d ${OPENSHIFT_DATA_DIR}data ]; then
	mkdir ${OPENSHIFT_DATA_DIR}data
fi

if [ ! -d ${OPENSHIFT_DATA_DIR}storage/log ]; then
	mkdir ${OPENSHIFT_DATA_DIR}storage/log
fi

if [ ! -d ${OPENSHIFT_DATA_DIR}storage/session ]; then
	mkdir ${OPENSHIFT_DATA_DIR}storage/session
fi

if [ ! -d ${OPENSHIFT_DATA_DIR}storage/view ]; then
	mkdir ${OPENSHIFT_DATA_DIR}storage/view
fi


ln -sfv ${OPENSHIFT_DATA_DIR}files ${OPENSHIFT_REPO_DIR}

ln -sfv ${OPENSHIFT_DATA_DIR}data ${OPENSHIFT_REPO_DIR}

ln -sfv ${OPENSHIFT_DATA_DIR}storage/log ${OPENSHIFT_REPO_DIR}

ln -sfv ${OPENSHIFT_DATA_DIR}storage/session ${OPENSHIFT_REPO_DIR}

ln -sfv ${OPENSHIFT_DATA_DIR}storage/session ${OPENSHIFT_REPO_DIR}

# ln -sf ${OPENSHIFT_DATA_DIR}files ${OPENSHIFT_REPO_DIR}uploads/

# echo "${OPENSHIFT_REPO_DIR}uploads/ ---> ${OPENSHIFT_DATA_DIR}uploads/"

# cp -rf ${OPENSHIFT_REPO_DIR}uploads/* ${OPENSHIFT_DATA_DIR}uploads/ 2>/dev/null
